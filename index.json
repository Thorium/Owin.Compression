[{"uri":"/Owin.Compression/index.html","title":"Owin.Compression\r\n","content":"(*** hide ***)\n// This block of code is omitted in the generated HTML documentation. Use \n// it to define helpers that you do not want to show in the documentation.\n#I \u0022../../bin\u0022\n#I @\u0022./../../packages/Owin/lib/net40\u0022\n#r @\u0022nuget: Microsoft.Owin\u0022 \n#r @\u0022nuget: Microsoft.Owin.Hosting\u0022\n#r @\u0022nuget: Microsoft.Owin.Host.HttpListener\u0022\n#r @\u0022nuget: Owin.Compression\u0022\n#r @\u0022nuget: Microsoft.Owin.StaticFiles\u0022\n#r @\u0022nuget: Microsoft.Owin.FileSystems\u0022\n\n(**\nOwin.Compression\n======================\n\nDocumentation\n\n\u003Cdiv class=\u0022row\u0022\u003E\n  \u003Cdiv class=\u0022span1\u0022\u003E\u003C/div\u003E\n  \u003Cdiv class=\u0022span6\u0022\u003E\n    \u003Cdiv class=\u0022well well-small\u0022 id=\u0022nuget\u0022\u003E\n      The Owin.Compression library can be \u003Ca href=\u0022https://nuget.org/packages/Owin.Compression\u0022\u003Einstalled from NuGet\u003C/a\u003E:\n      \u003Cpre\u003EPM\u003E Install-Package Owin.Compression\u003C/pre\u003E\n    \u003C/div\u003E\n  \u003C/div\u003E\n  \u003Cdiv class=\u0022span1\u0022\u003E\u003C/div\u003E\n\u003C/div\u003E\n\nDefault compression used is deflate, then gzip, as deflate should be faster.\n\nExample #1\n----------\n\nThis example demonstrates using MapCompressionModule-function defined in this sample library.\n\n\u0060\u0060\u0060csharp\n\tusing System;\n\tusing Owin;\n\t[assembly: Microsoft.Owin.OwinStartup(typeof(MyServer.MyWebStartup))]\n\tnamespace MyServer\n\t{\n\t\tclass MyWebStartup\n\t\t{\n\t\t\tpublic void Configuration(Owin.IAppBuilder app)\n\t\t\t{\n                // This will compress the whole request, if you want to use e.g. Microsoft.Owin.StaticFiles server:\n                // app.UseCompressionModule()\n\n\t\t\t\tvar settings = OwinCompression.DefaultCompressionSettingsWithPath(\u0022c:\\\\temp\\\\\u0022); //\u0022 server path\n\t\t\t\t//or var settings = new CompressionSettings( ... )\n\t\t\t\tapp.MapCompressionModule(\u0022/zipped\u0022, settings);\n\t\t\t}\n\t\t}\n\n\t\tclass Program\n\t\t{\n\t\t\tstatic void Main(string[] args)\n\t\t\t{\n\t\t\t\tMicrosoft.Owin.Hosting.WebApp.Start\u003CMyWebStartup\u003E(\u0022http://*:8080\u0022); //\u0022 run on localhost.\n\t\t\t\tConsole.WriteLine(\u0022Server started... Press enter to exit.\u0022);\n\t\t\t\tConsole.ReadLine();\n\t\t\t}\n\t\t}\n\t}\n\u0060\u0060\u0060\n\nAnd now your files are smaller than with e.g. just Microsoft.Owin.StaticFiles -library server:\n\n\u003Cimg src=\u0022https://raw.githubusercontent.com/Thorium/Owin.Compression/master/screen.png\u0022 alt=\u0022compressed\u0022 width=\u00221000\u0022/\u003E\n\nEven though the browser sees everything as plain text, the traffic is actually transfered as compressed format.\nYou can monitor the traffic with e.g. Fiddler.\n\nExample #2\n----------\n\nRunning on OWIN Self-Host (Microsoft.Owin.Hosting) with static files server (Microsoft.Owin.StaticFiles)\nand compressing only the \u0022.json\u0022-responses (and files) on-the-fly, with only gzip and not deflate:\n\n\u0060\u0060\u0060csharp\n\tusing System;\n\tusing Owin;\n\t[assembly: Microsoft.Owin.OwinStartup(typeof(MyServer.MyWebStartup))]\n\tnamespace MyServer\n\t{\n\t\tclass MyWebStartup\n\t\t{\n\t\t\tpublic void Configuration(Owin.IAppBuilder app)\n\t\t\t{\n\t\t\t\tvar settings = new CompressionSettings(\n\t\t\t\t\tserverPath: \u0022\u0022, \n\t\t\t\t\tallowUnknonwnFiletypes: false,\n\t\t\t\t\tallowRootDirectories: false, \n\t\t\t\t\tcacheExpireTime: Microsoft.FSharp.Core.FSharpOption\u003CDateTimeOffset\u003E.None, \n\t\t\t\t\tallowedExtensionAndMimeTypes:\n\t\t\t\t\t\tnew[] { Tuple.Create(\u0022.json\u0022, \u0022application/json\u0022) },\n\t\t\t\t\tminimumSizeToCompress: 1000, \n\t\t\t\t\tstreamingDisabled: false,\n\t\t\t\t\tdeflateDisabled: true\n\t\t\t\t\t);\n\t\t\t\tapp.UseCompressionModule(settings);\n\t\t\t}\n\t\t}\n\n\t\tclass Program\n\t\t{\n\t\t\tstatic void Main(string[] args)\n\t\t\t{\n\t\t\t\tMicrosoft.Owin.Hosting.WebApp.Start\u003CMyWebStartup\u003E(\u0022http://*:8080\u0022);\n\t\t\t\tConsole.WriteLine(\u0022Server started... Press enter to exit.\u0022);\n\t\t\t\tConsole.ReadLine();\n\t\t\t}\n\t\t}\n\t}\n\u0060\u0060\u0060\n\nExample #3\n----------\n\nRunning on OWIN Self-Host (Microsoft.Owin.Hosting) with static files server (Microsoft.Owin.StaticFiles)\nand compressing all the responses (and files) on-the-fly. This example is in F-Sharp (and can be run with F#-interactive):\n\n*)\n\n\n#r \u0022Owin.dll\u0022\n#r \u0022Microsoft.Owin.dll\u0022\n#r \u0022Microsoft.Owin.FileSystems.dll\u0022\n#r \u0022Microsoft.Owin.Hosting.dll\u0022\n#r \u0022Microsoft.Owin.StaticFiles.dll\u0022\n#r \u0022System.Configuration.dll\u0022\n#r \u0022Owin.Compression.dll\u0022\n\nopen Owin\nopen System\n\nmodule Examples =\n\ntype MyStartup() =\n    member __.Configuration(app:Owin.IAppBuilder) =\n        let app1 = app.UseCompressionModule()\n        app1.UseFileServer \u0022/.\u0022 |\u003E ignore\n        ()\n\nlet server = Microsoft.Owin.Hosting.WebApp.Start\u003CMyStartup\u003E \u0022http://*:6000\u0022\nConsole.WriteLine \u0022Press Enter to stop \u0026 quit.\u0022\nConsole.ReadLine() |\u003E ignore\nserver.Dispose()\n\n(**\n\nExample #4\n----------\n\nRunning on ASP.NET Core web API on .NET 6.0. You can use C# but this example is in F#\njust because shorter syntax. The full project is available at tests-folder:\n\n*)\n\nopen System\nopen Microsoft.AspNetCore.Builder\nopen Microsoft.Extensions.DependencyInjection\nopen Microsoft.Extensions.Hosting\nopen Owin\n\nmodule Program =\n\n    [\u003CEntryPoint\u003E]\n    let main args =\n\n        let builder = WebApplication.CreateBuilder args\n        builder.Services.AddControllers() |\u003E ignore\n        let app = builder.Build()\n\n        let compressionSetting = \n            {OwinCompression.DefaultCompressionSettings with \n                CacheExpireTime = Some (DateTimeOffset.Now.AddDays 7.)\n                AllowUnknonwnFiletypes = true\n                StreamingDisabled = true\n            }\n        (app :\u003E IApplicationBuilder).UseCompressionModule(compressionSetting) |\u003E ignore \n        app.MapControllers() |\u003E ignore\n        app.Run()\n        0\n(**\n\n\nMore complete example can be found \u003Ca href=\u0022https://github.com/Thorium/WebsitePlayground\u0022\u003Ehere\u003C/a\u003E.\n\n\nSamples \u0026 documentation\n-----------------------\n\nThe library comes with comprehensible documentation. \nIt can include tutorials automatically generated from \u0060*.fsx\u0060 files in [the content folder][content]. \nThe API reference is automatically generated from Markdown comments in the library implementation.\n\n * [Tutorial](tutorial.html) contains a further explanation of this sample library.\n\n * [API Reference](reference/index.html) contains automatically generated documentation for all types, modules\n   and functions in the library. This includes additional brief samples on using most of the\n   functions.\n \nContributing and copyright\n--------------------------\n\nThe project is hosted on [GitHub][gh] where you can [report issues][issues], fork \nthe project and submit pull requests. If you\u0027re adding a new public API, please also \nconsider adding [samples][content] that can be turned into a documentation. You might\nalso want to read the [library design notes][readme] to understand how it works.\n\nThe library is available under Public Domain license, which allows modification and \nredistribution for both commercial and non-commercial purposes. For more information see the \n[License file][license] in the GitHub repository. \n\n  [content]: https://github.com/fsprojects/Owin.Compression/tree/master/docs/content\n  [gh]: https://github.com/fsprojects/Owin.Compression\n  [issues]: https://github.com/fsprojects/Owin.Compression/issues\n  [readme]: https://github.com/fsprojects/Owin.Compression/blob/master/README.md\n  [license]: https://github.com/fsprojects/Owin.Compression/blob/master/LICENSE.txt\n*)"},{"uri":"/Owin.Compression/license.html","title":"license","content":"This is free and unencumbered software released into the public domain.\r\n\r\nAnyone is free to copy, modify, publish, use, compile, sell, or\r\ndistribute this software, either in source code form or as a compiled\r\nbinary, for any purpose, commercial or non-commercial, and by any\r\nmeans.\r\n\r\nIn jurisdictions that recognize copyright laws, the author or authors\r\nof this software dedicate any and all copyright interest in the\r\nsoftware to the public domain. We make this dedication for the benefit\r\nof the public at large and to the detriment of our heirs and\r\nsuccessors. We intend this dedication to be an overt act of\r\nrelinquishment in perpetuity of all present and future rights to this\r\nsoftware under copyright law.\r\n\r\nTHE SOFTWARE IS PROVIDED \u0022AS IS\u0022, WITHOUT WARRANTY OF ANY KIND,\r\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\r\nIN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR\r\nOTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,\r\nARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\r\nOTHER DEALINGS IN THE SOFTWARE.\r\n\r\nFor more information, please refer to \u003Chttp://unlicense.org/\u003E\r\n"},{"uri":"/Owin.Compression/release-notes.html","title":"release-notes","content":"### 1.0.26 - June 17 2022\r\n* Reference component update\r\n* Better performance via F# 6.0 tasks\r\n\r\n### 1.0.24 - March 22 2022\r\n* Fix for avoiding double compression\r\n\r\n### 1.0.23 - July 13 2021\r\n* Reference component update\r\n\r\n### 1.0.22 - February 01 2021\r\n* Reference component update\r\n\r\n### 1.0.21 - July 11 2018\r\n* Reference component update\r\n\r\n### 1.0.20 - February 20 2018\r\n* Check for cancellation token before reading headers\r\n\r\n### 1.0.19 - February 20 2018\r\n* References updated\r\n\r\n### 1.0.18 - November 08 2017\r\n* Fix for stream ETAGs #8\r\n\r\n### 1.0.17 - October 02 2017\r\n* Fix for Owin dependency #7\r\n* Initial conversion for .NET Standard 2.0 using Microsoft.AspNetCore.Http, not tested yet.\r\n\r\n### 1.0.16 - June 09 2017\r\n* References updated\r\n\r\n### 1.0.15 - April 26 2017\r\n* References updated\r\n\r\n### 1.0.14 - March 20 2017\r\n* Minor default config update\r\n\r\n### 1.0.13 - March 08 2017\r\n* No functionality changes.\r\n* Dependency updated.\r\n\r\n### 1.0.12 - September 10 2016\r\n* Respect Pragma no-cache\r\n\r\n### 1.0.11 - September 06 2016\r\n* Added compression based on Mime type\r\n* eTag cache: cancel work if can send 304\r\n\r\n### 1.0.10 - June 30 2016\r\n* Added setting option DeflateDisabled\r\n\r\n### 1.0.9 - June 29 2016\r\n* Added reference to FSharp.Core\r\n\r\n### 1.0.8 - April 15 2016\r\n* Added Vary-header part 3.\r\n\r\n### 1.0.7 - April 15 2016\r\n* Added Vary-header part 2.\r\n\r\n### 1.0.6 - April 15 2016\r\n* Added Vary-header.\r\n\r\n### 1.0.5 - April 06 2016\r\n* Don\u0027t compress SignalR requests\r\n\r\n### 1.0.4 - April 06 2016\r\n* Better handling of canceled request.\r\n\r\n### 1.0.3 - April 04 2016\r\n* Better handling of canceled request.\r\n\r\n### 1.0.2 - March 11 2016\r\n* Added support for static files with app.UseCompressionModule()\r\n\r\n### 1.0.1 - December 11 2015\r\n* Documentation and C# interface improved\r\n\r\n### 1.0 - December 11 2015\r\n* Initial release\r\n"},{"uri":"/Owin.Compression/tutorial.html","title":"Using this library (C-Sharp)\r\n","content":"(*** hide ***)\n// This block of code is omitted in the generated HTML documentation. Use \n// it to define helpers that you do not want to show in the documentation.\n#I \u0022../../bin\u0022\n#I @\u0022./../../packages/Owin/lib/net40\u0022\n#I @\u0022./../../packages/Microsoft.Owin/lib/net451\u0022 \n#I @\u0022./../../packages/Microsoft.Owin.Hosting/lib/net451\u0022\n#I @\u0022./../../packages/Microsoft.Owin.Host.HttpListener/lib/net451\u0022\n#I @\u0022./../../bin/Owin.Compression\u0022\n\n(**\n# Using this library (C-Sharp) #\n\nCreate new C# console application project (.NET 4.5 or more). Add reference to NuGet-packages:\n\n- Microsoft.Owin\n- Microsoft.Owin.Hosting\n- Microsoft.Owin.Host.HttpListener\n- Owin.Compression (this package)\n\nThen write the program, e.g.:\n\n\u0060\u0060\u0060csharp\n\tusing System;\n\tusing Owin;\n\t[assembly: Microsoft.Owin.OwinStartup(typeof(MyServer.MyWebStartup))]\n\tnamespace MyServer\n\t{\n\t\tclass MyWebStartup\n\t\t{\n\t\t\tpublic void Configuration(Owin.IAppBuilder app)\n\t\t\t{\n\t\t\t\tvar settings = OwinCompression.DefaultCompressionSettingsWithPath(@\u0022c:\\temp\\\u0022);\n\t\t\t\t//or var settings = new CompressionSettings( ... )\n\t\t\t\tapp.MapCompressionModule(\u0022/zipped\u0022, settings);\n\t\t\t}\n\t\t}\n\n\t\tclass Program\n\t\t{\n\t\t\tstatic void Main(string[] args)\n\t\t\t{\n\t\t\t\tMicrosoft.Owin.Hosting.WebApp.Start\u003CMyWebStartup\u003E(\u0022http://*:8080\u0022);\n\t\t\t\tConsole.WriteLine(\u0022Server started... Press enter to exit.\u0022);\n\t\t\t\tConsole.ReadLine();\n\t\t\t}\n\t\t}\n\t}\n\u0060\u0060\u0060\n\nHave a large text file in your temp-folder, c:\\temp\\test\\mytempfile.txt\n\nNow, run the program (F5) and start a browser to address:\n\nhttp://localhost:8080/zipped/test/mytempfile.txt\n\nObserve that the file is transfered as compressed but the browser will automatically decompress the traffic.\n\n\n\n### Corresponding code with F-Sharp ###\n\n*)\n#r \u0022Owin.dll\u0022\n#r \u0022Microsoft.Owin.dll\u0022\n#r \u0022Microsoft.Owin.Hosting.dll\u0022\n#r \u0022System.Configuration.dll\u0022\n#r \u0022Owin.Compression.dll\u0022\n\nopen Owin\nopen System\n\nlet serverPath = System.Configuration.ConfigurationManager.AppSettings.[\u0022WwwRoot\u0022]\n\ntype MyWebStartup() =\n    member __.Configuration(app:Owin.IAppBuilder) =\n        let compressionSetting = \n            {OwinCompression.DefaultCompressionSettings with \n                ServerPath = serverPath; \n                CacheExpireTime = Some (DateTimeOffset.Now.AddDays 7.) }\n        app.MapCompressionModule(\u0022/zipped\u0022, compressionSetting) |\u003E ignore \n        ()\n\n[\u003Cassembly: Microsoft.Owin.OwinStartup(typeof\u003CMyWebStartup\u003E)\u003E]\ndo()\n\n// and then...\n\nMicrosoft.Owin.Hosting.WebApp.Start\u003CMyWebStartup\u003E \u0022http://*:8080\u0022\n\n(**\nOr you can use app.UseCompressionModule() in the beginning of the configuration to compress the whole response.\n*)\n\ntype MyWebStartupExample2() =\n    member __.Configuration(app:Owin.IAppBuilder) =\n        app.UseCompressionModule() |\u003E ignore\n        \n        //app.MapSignalR(hubConfig)\n        //app.UseFileServer(fileServerOptions) |\u003E ignore\n        //etc...\n\n        ()"}]